class Solution {
public:

    // void func (int ind , vector<int>& temp ,vector<vector<int>>& ans , int n , vector<int>& nums)
    // {
    //     if (ind == n)
    //     {
    //         ans.push_back(temp);
    //         return;
    //     }
    //     temp.push_back(nums[ind]);
    //     func (ind+1,temp,ans,n,nums);
    //     temp.pop_back();
    //     func (ind+1,temp,ans,n,nums);

    // }

    vector<vector<int>> subsets(vector<int>& nums) {


        //using the recursion method 
        int n = nums.size();
        vector<int> temp;
        vector<vector<int>> ans;
        func(0,temp,ans,n,nums);
        return ans;;



        //using the bit manipulation method 
        int n = nums.size();
        vector<vector<int>> ans;
        for(int i=0;i<pow(2,n); i++ )
        {
            vector<int> temp;
            for (int j=0;j<n;j++)
            {
                if (i&(1<<j))
                {
                    temp.push_back(nums[j]);
                }
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
